{"version":3,"sources":["components/PictureCard.js","components/Wrapper.js","components/Header.js","components/NavBar.js","App.js","index.js"],"names":["PictureCard","props","className","id","onClick","handleClick","click","height","width","alt","src","image","SectionImage","children","Header","message","Score","TopScore","styles","navbarStyle","justifyContent","Nav","style","href","headingStyle","App","state","images","pics","clicked","count","topScore","roses","forEach","index","setState","sort","Math","random","newScore","newTopScore","NavBar","this","Wrapper","map","name","Component","ReactDOM","render","document","getElementById"],"mappings":"yLAmBeA,MAjBf,SAAsBC,GAClB,OAEE,aADA,CACA,OAAKC,UAAW,sBAAhB,SACA,qBAAKC,GAAIF,EAAME,GAAf,SAIA,qBAAKD,UAAU,gBAAf,SACE,qBAAKE,QAAS,kBAAMH,EAAMI,YAAYJ,EAAME,GAAIF,EAAMK,QAAQJ,UAAU,UAAUK,OAAO,MAAMC,MAAO,MAAMC,IAAI,QAAQC,IAAMT,EAAMU,eCmC7HC,MAZf,SAAsBX,GACpB,OACE,qBAAKC,UAAW,YAAhB,SAIGD,EAAMY,YCOEC,MArBf,SAAgBb,GACd,OAEE,aADA,CACA,UAAQC,UAAU,SAAlB,SACE,sBAAKA,UAAU,MAAf,UAEE,qBAAKA,UAAU,WAAf,SACE,6BAAKD,EAAMc,YAKb,oBAAGb,UAAU,QAAb,cAAsB,yCAAYD,EAAMe,MAAlB,gBAAsCf,EAAMgB,SAA5C,OAAtB,aC1BFC,EAAS,CACbC,YAAa,CAEXC,eAAgB,aAwBLC,MAff,SAAapB,GACX,OACE,sBAAKqB,MAAOJ,EAAOC,YAAajB,UAAU,SAA1C,UACE,mBAAGqB,KAAK,IAAR,yBAIA,oBAAID,MAAOJ,EAAOM,aAAlB,2E,OC+DSC,E,4MApFbC,MAAQ,CACNC,OAAQC,EACRC,SAAS,EACTC,MAAO,EACPC,SAAU,EACVhB,QAAQ,sC,EAMVV,YAAc,SAACF,EAAIG,GACjB,IAAM0B,EAAQ,EAAKN,MAAMC,OACzB,GAAIrB,EAIF,OAHA0B,EAAMC,SAAQ,SAACtB,EAAOuB,GACpBF,EAAME,GAAO5B,OAAQ,KAEhB,EAAK6B,SAAS,CACnBR,OAAQK,EAAMI,MAAK,kBAAMC,KAAKC,SAAW,MACzCvB,QAAS,iCACTe,MAAO,IAMTE,EAAMC,SAAQ,SAACtB,EAAOuB,GAEpB,GAAI/B,IAAOQ,EAAMR,GAAI,CACnB6B,EAAME,GAAO5B,OAAQ,EACrB,IAAMiC,EAAW,EAAKb,MAAMI,MAAQ,EAE9BU,EAAcD,EAAW,EAAKb,MAAMK,SAAWQ,EAAW,EAAKb,MAAMK,SAE3E,OAAO,EAAKI,SAAS,CACnBxB,MAAOqB,EAAMI,MAAK,kBAAMC,KAAKC,SAAW,MACxCvB,QAAS,yBACTe,MAAOS,EACPR,SAAUS,S,4CAOpB,WAAU,IAAD,OACP,OACE,gCACE,cAACC,EAAD,IACA,cAAC,EAAD,CAAQ1B,QAAS2B,KAAKhB,MAAMX,QAASC,MAAQ0B,KAAKhB,MAAMI,MAAOb,SAAWyB,KAAKhB,MAAMK,WACrF,qBAAK7B,UAAU,YAAf,SAEA,cAACyC,EAAD,CAASzC,UAAU,YAAnB,SACE,qBAAKA,UAAU,MAAf,SAICwC,KAAKhB,MAAMC,OAAOiB,KAAI,SAAAjB,GACrB,OACE,mCAGE,cAAC,EAAD,CAEExB,GAAIwB,EAAOxB,GAGX0C,KAAMlB,EAAOkB,KACblC,MAAOgB,EAAOhB,MACdL,MAAOqB,EAAOrB,MACdD,YAAa,EAAKA,aAJbsB,EAAOxB,sB,GApEZ2C,aCJlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.7ecf8e49.chunk.js","sourcesContent":["import React from 'react'\nimport \"../style/style.css\";\nfunction  PictureCard(props) {\n    return (\n      // <div className=\"row\">\n      <div className= \"col-md-3 click-item\">\n      <div id={props.id}>\n      {/* {console.log(props)}\n      {console.log(\"banana\")} */}\n      \n      <div className=\"img-container\">\n        <img onClick={() => props.handleClick(props.id, props.click)} className=\"shuffle\" height=\"150\" width= \"250\" alt=\"rose1\" src= {props.image} />\n      </div>\n     \n    </div>\n    </div>\n    // </div>\n    )\n}\nexport default PictureCard;\n\n\n// import React from \"react\";\n// you dont need line 2 bc app is already give us that data\n// import pictures from \"../style/images/rose1.jpeg\"\n\n// pass data into source \n// we pass data by.... \n// we passs data props by {}\n// don't mix with class wiht function\n\n// calling multiple function in react\n// onClick={() => {\n//   greeting();\n//   waveHello();\n// }}>\n// // if you are using this, it is always class \n// function pictureCard(props) {\n//   // you can only get whatever we send to it from APPs \n//   // in thsi case you have 4\n\n//   console.log (props)\n//   return (\n//     // choose the most \n//     <div className=\"card\" id={props.id}>\n      \n//       <div className=\"img-container\">\n//         <img alt=\"rose1\" src= {props.image} />\n//       </div>\n//       <div className=\"content\">\n//         <ul>\n//           <li>\n//             <strong>Name: {props.name}</strong> \n//           </li>\n      \n//         </ul>\n//       </div>\n//       {/* <span onClick={() => props.removeFriend(props.id)} className=\"remove\">\n//         ùòÖ\n//       </span> */}\n//     </div>\n//   );\n// }","// import React from \"react\";\n// // import \"../styles/Section.css\";\n\n// // By importing the Section.css file, it is added to the DOM whenever this component loads\n\n// // We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\n// // Unlike regular HTML, a JSX style property must be an object instead of a string\n// // On a style object, we camelCase all property names, and put all of the values in quotes\n// // Non quoted values default to \"pixels\", e.g. height, margin, padding\n\n// const styles = {\n//   sectionStyles: {\n//     background: \"wheat\"\n//   }\n// };\n\n// // We use JSX curly braces to evaluate the style object on the JSX tag\n\n// function Section() {\n//   return (\n//     <section style={styles.sectionStyles} className=\"section\">\n//       imgages will go here\n//       <div> </div>\n      \n//     </section>\n//   );\n// }\n\n// export default Section;\n// rwp children \n\nimport React from \"react\";\nimport \"../style/style.css\";\n\nfunction SectionImage(props) {\n  return (\n    <div className= \"container\">\n    {/* <div className= \"row\"> */}\n      {/* <h2 className=\"result\"> YOU MUST DIE</h2> */}\n      {/* chiren is th epictirecard */}\n      {props.children}\n    {/* </div> */}\n    </div>\n  );\n}\n\nexport default SectionImage;\n\n\n\n\n","import React from \"react\";\nimport \"../style/style.css\";\n\n// By importing the Header.css file, it is added to the DOM whenever this component loads\n\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\n// Unlike regular HTML, a JSX style property must be an object instead of a string\n// On a style object, we camelCase all property names, and put all of the values in quotes\n// Non quoted values default to \"pixels\", e.g. height, margin, padding\n\n// const styles = {\n//   headerStyle: {\n//     background: \"purle\",\n//     // fontSize: 30\n//   },\n//   headingStyle: {\n//     fontSize: 30\n//   }\n// };\n\n\n    {/* topscore </p>Hello </Header> */}\n\n\n// We use JSX curly braces to evaluate the style object\n\nfunction Header(props) {\n  return (\n    // this { } is JSX, you can think of it as object deconstruction or dot notation, just know that, style.headerStyle, come from the object you created on line 11\n    <header className=\"header\">\n      <div className=\"row\">\n    \n        <div className=\"announce\">\n          <h4>{props.message}</h4>\n\n        </div>\n        \n       \n        <p className=\"score\"> <h5>Score: {props.Score}| Top score: {props.TopScore} </h5> </p>\n       \n      \n      \n      </div>\n    </header>\n  );\n}\n\nexport default Header;","import React from \"react\";\nimport \"../style/style.css\";\n\n// import \"../styles/Navbar.css\";\n\n// By importing the Navbar.css file, it is added to the DOM whenever this component loads\n\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\n// Unlike regular HTML, a JSX style property must be an object instead of a string\n// On a style object, we camelCase all property names, and put all of the values in quotes\n// Non quoted values default to \"pixels\", e.g. height, margin, padding\n\nconst styles = {\n  navbarStyle: {\n    // background: \"purple\",\n    justifyContent: \"flex-end\"\n    // fontSize: 100,\n\n    // justifyContent: \"flex-end\"//flex-end: items are packed toward to end line https://css-tricks.com/almanac/properties/j/justify-content/\n  }\n};\n\n// We use JSX curly braces to evaluate the style object on the JSX tag\n\nfunction Nav(props) {\n  return (\n    <nav style={styles.navbarStyle} className=\"navbar\">\n      <a href=\"/\">Clicky Game</a>\n\n\n\n      <h3 style={styles.headingStyle}>A thorn defends the rose, touch it twice and you will die</h3>\n\n\n\n    </nav>\n  );\n}\n\nexport default Nav;","import React, { Component } from \"react\";\n// another way to do this is import React from react then on line 9, do class App extends React.Component\nimport PictureCard from \"./components/PictureCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport NavBar from \"./components/NavBar\";\nimport pics from \"./images.json\";\n\nclass App extends Component {\n  // Setting this.state.images to the images json array\n  state = {\n    images: pics,//represnt the array of imgaes \n    clicked: false,\n    count: 0,\n    topScore: 0,\n    message:\"Click the roses once to gain point\"\n  }\n\n\n\n  // set the id and click as parameter for this handle function so we can call it later in picure card\n  handleClick = (id, click) => {\n    const roses = this.state.images;\n    if (click) {\n      roses.forEach((image, index) => {\n        roses[index].click = false;\n      });\n      return this.setState({\n        images: roses.sort(() => Math.random() - 0.5),\n        message: \"You Are Dead (>_<) Play Again!\",\n        count: 0\n      })\n    }\n\n    else {\n      // {this.handleIncrement()}\n      roses.forEach((image, index) => {\n        // if the id is clicke, which mean that clicked index is the same as id z\n        if (id === image.id) {\n          roses[index].click = true;\n          const newScore = this.state.count + 1;\n          // if newScore is grater than topscore (?do) set newTopScore to newscore (:else, aka if newScore is equal or less than topScore, keep theo topScore\n          const newTopScore = newScore > this.state.topScore ? newScore : this.state.topScore;\n            // return the new state\n          return this.setState({\n            image: roses.sort(() => Math.random() - 0.5),\n            message: \"You Guessed Correctly!\",\n            count: newScore,\n            topScore: newTopScore,\n          })\n        }\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <NavBar  />\n        <Header message={this.state.message} Score= {this.state.count} TopScore= {this.state.topScore}/>\n        <div className=\"container\">\n        \n        <Wrapper className=\"container\">\n          <div className=\"row\">\n          {/* {console.log(this.state)} */}\n\n          {/* <div className=\"row\" id=\"inline\"> */}\n          {this.state.images.map(images => {\n            return (\n              <>\n                {/* // <div className=\"row\">\n              //   <div className= \"col-md-3\"> */}\n                <PictureCard\n                  // we are sending data to Picture card, you don't need to specify props, props are only to recive\n                  id={images.id}\n                  // react require a key for map,we have it but dont use it \n                  key={images.id}\n                  name={images.name}\n                  image={images.image}\n                  click={images.click}\n                  handleClick={this.handleClick}\n                />\n                {/* // </div> */}\n              </>)\n          })}\n          </div>\n        </Wrapper>\n        \n        </div>\n      </div>\n    );\n  };\n};\n\nexport default App;\n\n\n\n\n\n// // all the function breakdown\n// shuffleRoses = () => {\n//     this.setState({\n//       images: this.state.images.sort(function (a, b) {\n//         return 0.5 - Math.random()\n//       }\n//       )\n//     })\n//   }\n\n\n//   handleClickOnce = ()=>{\n//     this.setState({\n//       count: this.state.count +1,\n//       message: \"good job \"\n//     })\n//   }\n\n//   handleClickTwice = ()=> {\n//     this.setState({\n//       count: 0,\n//       message: \"you must die\"\n//     })\n//   }\n\n//   handleDecrement = () => {\n//     // We always use the setState method to update a component's state\n//     if(this.state.count > 0){\n//       this.setState({ count: this.state.count - 1 });\n//     }\n\n//   };\n//   handleIncrement = () => {\n//     // We always use the setState method to update a component's state\n//     this.setState({ score: this.state.count + 1 });\n//   };\n\n\n  // handleClick = (id, clicked) => {\n\n  //   const imageOrder = this.state.images;\n\n  //   if (clicked) {\n  //     imageOrder.forEach((image, index) => {\n  //       imageOrder[index].clicked = false;\n  //     });\n  //     return this.setState({\n  //       image: imageOrder.sort(() => Math.random() - 0.5),\n  //       message: \"You Guessed Incorrectly!\",\n  //       score: 0\n  //     })\n  //   }\n  //   else {\n  //     imageOrder.forEach((image, index) => {\n  //       if (id === image.id) {\n  //         imageOrder[index].clicked = true;\n  //       }\n  //     });\n\n  //     const { topScore, score } = this.state;\n  //     const newScore = score + 1;\n  //     const newTopScore = newScore > topScore ? newScore : topScore;\n\n  //     return this.setState({\n  //       image: imageOrder.sort(() => Math.random() - 0.5),\n  //       message: \"You Guessed Correctly!\",\n  //       score: newScore,\n  //       topScore: newTopScore,\n  //     })\n  //   }\n  // };","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}